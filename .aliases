#/usr/bin/env bash

#
# Alias Helper Functions
#

function sudo_alias() {
	if (( $# == 0 )); then
		printf "Usage: sudo_alias [-b|--both] PROGRAM=COMMAND\n\n"

		printf "Generates alias(es) which require(s) sudo.\n\n"

		printf "When --both is given, this function will generate one alias with PROGRAM in tact and COMMAND in tact,\n"
		printf "and another alias with PROGRAM prepended with \"su\" and COMMAND prepended with \"sudo \". For example:\n\n"

		printf "\tsudo_alias -b cp=\"cp -r\"\n\n"

		printf "will generate:\n\n"

		printf "\talias cp=\"cp -r\"\n\n"

		printf "and\n\n"

		printf "\talias sucp=\"sudo cp -r\"\n\n"

		printf "Otherwise, this function will generate the alias with PROGRAM in tact and COMMAND prepended with \"sudo \".\n"

		if [[ $- == *i* ]]; then
			return 1
		else
			exit 1
		fi
	fi

	local both command program

	both=false
	if [[ $1 == "-b" || $1 == "--both" ]]; then
		both=true
		shift
	fi

	command=$1
	if [[ $command =~ "=" ]]; then
		program=$(cut -d "=" -f 1 <<< $command)
		command=$(cut -d "=" -f 2- <<< $command)
	else
		program=$command
	fi

	if $both; then
		alias $program="$command"
		alias su$program="sudo $command"
	else
		alias $program="sudo $command"
	fi

	if [[ $- == *i* ]]; then
		return 0
	else
		exit 0
	fi
}

function configuration_alias() {
    if (( $# < 2 )); then
        printf "Usage: configuration_alias PROGRAM FILE [RELOAD_COMMAND [RELOAD_MESSAGE]]\n\n"

		printf "Creates an alias that invokes the configured editor for the purposes of configuration, and (optionally)\n"
		printf "reload the program/service to which the configuration controls.\n\n"

		printf "The name of the generated alias will be \"configure-PROGRAM\". If FILE already exists, the generated alias\n"
		printf "will determine if \"\$SUDO_EDITOR FILE\" is required. Otherwise, it will assume that \"\$EDITOR FILE\" is\n"
		printf "sufficient.\n\n"

		printf "By default, this function will generate an alias that will simply edit the configuration file. For example:\n\n"

		printf "\tconfiguration_alias hosts /etc/hosts\n\n"

		printf "will generate:\n\n"

		printf "\talias configure-hosts=\"sudo \$EDITOR /etc/hosts\"\n\n"

		printf "If RELOAD_COMMAND is given, a generic message will be echoed and RELOAD_COMMAND will be executed. For example:\n\n"

		printf "\tconfiguration_alias bash $HOME/.bashrc \"source $HOME/.bashrc\"\n\n"

		printf "will generate:\n\n"

		printf "\talias configure-bash=\"edit ~./bashrc; printf \"Reloading bash...\\n\"; source $HOME/.bashrc\"\n\n"

		printf "If RELOAD_MESSAGE is given, RELOAD_MESSAGE with a newline will be printed instead.\n"

		if [[ $- == *i* ]]; then
			return 1
		else
			exit 1
		fi
    fi

    local program file reload_command reload_message editor

    program=$1; shift
    file=$1; shift
    reload_command=$1; shift
    reload_message=$1

    editor=$EDITOR
    if touch -c $file 2>&1 | grep -q "Permission denied"; then
		editor=$SUDO_EDITOR
    elif [[ ! -e $file ]]; then
		print_warning "\"$file\" does not exist; configuration_alias will assume unpriviledged editing"
	fi

	if [[ -z $reload_command ]]; then
		alias configure-$program="$editor $file"
	elif [[ -z $reload_message ]]; then
		alias configure-$program="$editor $file; printf \"Reloading $program...\n\"; $reload_command"
	else
		alias configure-$program="$editor $file; printf \"$reload_message\n\"; $reload_command"
	fi

	if [[ $- == *i* ]]; then
		return 0
	else
		exit 0
	fi
}

#
# Permission and User Management
#

sudo_alias -b chown="chown -R"
sudo_alias -b chmod="chmod -R"
sudo_alias -b chgrp="chgrp -R"

#
# File Information and Management
#

alias ls="ls --color=auto"
sudo_alias -b cp
sudo_alias -b cpdir="cp -r"
sudo_alias -b mv
sudo_alias -b rm
sudo_alias -b rmdir="rm -r"
sudo_alias -b mkdir="mkdir -p"
sudo_alias -b touch
sudo_alias -b sln="ln -s"

#
# Device Management
#

sudo_alias mount="mount -m"
sudo_alias umount 

#
# Programs
#

alias edit=$EDITOR
alias suedit=$SUDO_EDITOR
alias pkgmgr=paru
sudo_alias pacman
sudo_alias ufw
sudo_alias sysctl=systemctl
sudo_alias reboot

# Hererocks
if [[ -r $HEREROCKS ]]; then
	function hererocks_aliases() {
		if [[ ! -d $HEREROCKS ]]; then
			print_warning "cannot find hererocks directory; not adding hererocks aliases"
			if [[ $- == *i* ]]; then
				return 1
			else
				exit 1
			fi
		fi

		local installations installation version
		installations=($HEREROCKS/lua*)
		for installation in ${installations[@]}; do
			version=${installation##$HEREROCKS/lua}
			alias lua$version="$installation/bin/lua"
			alias luarocks$version="$installation/bin/luarocks"
		done
		alias lua="${installations[-1]}/bin/lua"
		alias luarocks="${installations[-1]}/bin/luarocks"
		alias moon="$HEREROCKS/lua5.2/bin/moon"
		alias moonc="$HEREROCKS/lua5.2/bin/moonc"

		if [[ $- == *i* ]]; then
			return 0
		else
			exit 0
		fi
	}

	hererocks_aliases
fi

#
# Configuration Aliases
#

alias configure-sudoers="sudo visudo"
configuration_alias hosts /etc/hosts
configuration_alias pacman /etc/pacman.conf

# GRUB
if which grub-install &> /dev/null && which grub-mkconfig &> /dev/null; then
	sudo_alias grub-install="/usr/bin/grub-install --target=$(uname -m)-efi --efi-directory=/boot --bootloader-id=GRUB"
    sudo_alias grub-mkconfig="/usr/bin/grub-mkconfig -o /boot/grub/grub.cfg"
    configuration_alias grub /etc/default/grub "sudo grub-install --target="$(uname -m)-efi" --efi-directory=/boot --bootloader-id=GRUB; sudo grub-mkconfig -o /boot/grub/grub.cfg" "Reinstalling and reconfiguring GRUB..."
fi

# SSH
if which sshd &> /dev/null; then
    configuration_alias ssh-daemon /etc/ssh/sshd_config "sudo systemctl reload sshd" "Reloading SSH Daemon configuration..."
    configuration_alias ssh-client $HOME/.ssh/config
fi

# Nano
if which nano &> /dev/null; then
    configuration_alias nano-user $HOME/.nano/user.nanorc
    configuration_alias nano-root $HOME/.nano/root.nanorc
    alias configure-nano=configure-nano-user
fi

# Git
if which git &> /dev/null; then
    configuration_alias git $HOME/.gitconfig
fi

# Apache
if which httpd &> /dev/null; then
	configuration_alias apache /etc/httpd/conf/httpd.conf "sudo systemctl reload httpd" "Reloading Apache..."
	configuration_alias apache-virtual-hosts /etc/httpd/conf/extra/httpd-vhosts.conf "sudo systemctl reload httpd" "Reloading Apache..."
fi

# PHP
if which php &> /dev/null; then
	configuration_alias php /etc/php/php.ini "sudo systemctl reload httpd" "Reloading Apache..."
fi

# Bash
function bash_configuration_aliases() {
	local reload
	if ! shopt -q login_shell; then
		reload="source $HOME/.bashrc"
		configuration_alias interactive-shell $HOME/.bashrc "$reload" "Reloading shell..."
		configuration_alias login-shell $HOME/.profile
	else
		reload="source $HOME/.profile"
		configuration_alias interactive-shell $HOME/.bashrc
		configuration_alias login-shell $HOME/.profile "$reload" "Reloading shell..."
	fi
	alias reload="$reload"
	configuration_alias bash $HOME/.bash "$reload" "Reloading shell..."
	configuration_alias aliases $HOME/.aliases "$reload" "Reloading shell..."
	configuration_alias shell-integrations $HOME/.shell_integrations "$reload" "Reloading shell..."
}

bash_configuration_aliases

# Cron
if which fcrontab &> /dev/null; then
	configuration_alias cron $HOME/.cron/crontab "sudo fcrontab -u $USER $HOME/.cron/crontab" "Applying crontab..."
fi

#
# Scripts
#

alias backup=$DOTFILES/script/backup.sh
alias restore=$DOTFILES/script/restore.sh

# Installation Scripts
alias install-networking=$DOTFILES/install/networking/networking.sh
alias install-cron=$DOTFILES/install/cron/cron.sh
alias install-konsole=$DOTFILES/install/konsole.sh
